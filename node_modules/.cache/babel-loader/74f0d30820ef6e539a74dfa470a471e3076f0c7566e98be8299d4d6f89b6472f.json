{"ast":null,"code":"var _jsxFileName = \"E:\\\\MBKM\\\\BINAR FRONT END\\\\Chapter 3\\\\binar-exercise2-livecodingfasil\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  isRefresh,\n  setRefresh\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    // memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\").then(res => {\n        return res.json();\n      }).then(data => {\n        setRefresh(false);\n        // ketika Rest API sukses, simpan data dari response ke dalam state lokal\n        setTodos(data);\n      }).catch(err => {\n        setRefresh(false);\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted.\");\n        }\n      });\n    }\n  }, [isRefresh, setRefresh]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    id: \"todo-list\",\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      setRefresh: setRefresh\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useEffect","useState","TodoItem","jsxDEV","_jsxDEV","TodoList","isRefresh","setRefresh","_s","todos","setTodos","fetch","then","res","json","data","catch","err","name","console","log","id","children","map","todo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/MBKM/BINAR FRONT END/Chapter 3/binar-exercise2-livecodingfasil/src/components/TodoList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ isRefresh, setRefresh }) => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\")\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setRefresh(false);\n          // ketika Rest API sukses, simpan data dari response ke dalam state lokal\n          setTodos(data);\n        })\n        .catch((err) => {\n          setRefresh(false);\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted.\");\n          }\n        });\n    }\n  }, [isRefresh, setRefresh]);\n\n  return (\n    <ul id=\"todo-list\">\n      {todos.map((todo) => (\n        <TodoItem todo={todo} key={todo.id} setRefresh={setRefresh} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,SAAS,EAAE;MACbK,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,GAAG,IAAK;QACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;QACdR,UAAU,CAAC,KAAK,CAAC;QACjB;QACAG,QAAQ,CAACK,IAAI,CAAC;MAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdV,UAAU,CAAC,KAAK,CAAC;QACjB,IAAIU,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC/B;MACF,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACd,SAAS,EAAEC,UAAU,CAAC,CAAC;EAE3B,oBACEH,OAAA;IAAIiB,EAAE,EAAC,WAAW;IAAAC,QAAA,EACfb,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdpB,OAAA,CAACF,QAAQ;MAACsB,IAAI,EAAEA,IAAK;MAAejB,UAAU,EAAEA;IAAW,GAAhCiB,IAAI,CAACH,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACpB,EAAA,CA/BIH,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}