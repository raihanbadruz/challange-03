{"ast":null,"code":"var _jsxFileName = \"E:\\\\MBKM\\\\BINAR FRONT END\\\\Chapter 3\\\\binar-exercise2-livecodingfasil\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  isRefresh,\n  setRefresh\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  useEffect(() => {\n    // memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\").then(res => {\n        return res.json();\n      }).then(data => {\n        setRefresh(false);\n        // ketika Rest API sukses, simpan data dari response ke dalam state lokal\n        setTodos(data);\n      }).catch(err => {\n        setRefresh(false);\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted.\");\n        }\n      });\n    }\n  }, [isRefresh, setRefresh]);\n\n  // Buat array filteredTasks berdasarkan filter saat ini\n  const filteredTasks = todos.filter(todo => {\n    if (filter === \"all\") return true;\n    if (filter === \"completed\") return todo.done;\n    if (filter === \"uncompleted\") return !todo.done;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"all\"),\n        children: \"Tampilkan Semua\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"completed\"),\n        children: \"Tampilkan Selesai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"uncompleted\"),\n        children: \"Tampilkan Belum Selesai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"todo-list\",\n      children: filteredTasks.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        setRefresh: setRefresh\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"qiHS3T8PZBOmkCKwiKv+mGtQGMQ=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","TodoItem","jsxDEV","_jsxDEV","TodoList","isRefresh","setRefresh","_s","todos","setTodos","filter","setFilter","fetch","then","res","json","data","catch","err","name","console","log","filteredTasks","todo","done","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","_c","$RefreshReg$"],"sources":["E:/MBKM/BINAR FRONT END/Chapter 3/binar-exercise2-livecodingfasil/src/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ isRefresh, setRefresh }) => {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n\n  useEffect(() => {\n    // memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\")\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setRefresh(false);\n          // ketika Rest API sukses, simpan data dari response ke dalam state lokal\n          setTodos(data);\n        })\n        .catch((err) => {\n          setRefresh(false);\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted.\");\n          }\n        });\n    }\n  }, [isRefresh, setRefresh]);\n\n  // Buat array filteredTasks berdasarkan filter saat ini\n  const filteredTasks = todos.filter((todo) => {\n    if (filter === \"all\") return true;\n    if (filter === \"completed\") return todo.done;\n    if (filter === \"uncompleted\") return !todo.done;\n    return true;\n  });\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setFilter(\"all\")}>Tampilkan Semua</button>\n        <button onClick={() => setFilter(\"completed\")}>\n          Tampilkan Selesai\n        </button>\n        <button onClick={() => setFilter(\"uncompleted\")}>\n          Tampilkan Belum Selesai\n        </button>\n      </div>\n      <ul id=\"todo-list\">\n        {filteredTasks.map((todo) => (\n          <TodoItem todo={todo} key={todo.id} setRefresh={setRefresh} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}