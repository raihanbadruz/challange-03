{"ast":null,"code":"var _jsxFileName = \"E:\\\\MBKM\\\\BINAR FRONT END\\\\Chapter 3\\\\binar-exercise2-livecodingfasil\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport TodoFilter from \"./Filter\"; // Import komponen filter\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  isRefresh,\n  setRefresh\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State untuk input pencarian\n\n  useEffect(() => {\n    // Memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\").then(res => {\n        return res.json();\n      }).then(data => {\n        setRefresh(false);\n        // Ketika Rest API sukses, simpan data dari response ke dalam state lokal\n        setTodos(data);\n      }).catch(err => {\n        setRefresh(false);\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted.\");\n        }\n      });\n    }\n  }, [isRefresh, setRefresh]);\n\n  // Buat array filteredTasks berdasarkan filter dan pencarian saat ini\n  const filteredTasks = todos.filter(todo => {\n    const textMatch = todo.title.toLowerCase().includes(searchTerm.toLowerCase());\n    if (filter === \"all\") return textMatch;\n    if (filter === \"completed\") return textMatch && todo.completed;\n    if (filter === \"todo\") return textMatch && !todo.completed;\n    return textMatch;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value) // Mengubah state saat input berubah\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"todo-list\",\n      children: filteredTasks.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        setRefresh: setRefresh\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"/6vFjHXzsd/HlStG6F6r9hAf1Ck=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","TodoItem","TodoFilter","jsxDEV","_jsxDEV","TodoList","isRefresh","setRefresh","_s","todos","setTodos","filter","setFilter","searchTerm","setSearchTerm","fetch","then","res","json","data","catch","err","name","console","log","filteredTasks","todo","textMatch","title","toLowerCase","includes","completed","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","map","_c","$RefreshReg$"],"sources":["E:/MBKM/BINAR FRONT END/Chapter 3/binar-exercise2-livecodingfasil/src/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport TodoFilter from \"./Filter\"; // Import komponen filter\n\nconst TodoList = ({ isRefresh, setRefresh }) => {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State untuk input pencarian\n\n  useEffect(() => {\n    // Memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\")\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setRefresh(false);\n          // Ketika Rest API sukses, simpan data dari response ke dalam state lokal\n          setTodos(data);\n        })\n        .catch((err) => {\n          setRefresh(false);\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted.\");\n          }\n        });\n    }\n  }, [isRefresh, setRefresh]);\n\n  // Buat array filteredTasks berdasarkan filter dan pencarian saat ini\n  const filteredTasks = todos.filter((todo) => {\n    const textMatch = todo.title\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n    if (filter === \"all\") return textMatch;\n    if (filter === \"completed\") return textMatch && todo.completed;\n    if (filter === \"todo\") return textMatch && !todo.completed;\n    return textMatch;\n  });\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"search\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)} // Mengubah state saat input berubah\n        />\n      </div>\n      <TodoFilter filter={filter} setFilter={setFilter} />{\" \"}\n      {/* Gunakan komponen filter */}\n      <ul id=\"todo-list\">\n        {filteredTasks.map((todo) => (\n          <TodoItem todo={todo} key={todo.id} setRefresh={setRefresh} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}